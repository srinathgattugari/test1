[Unit]
Description=Jenkins master container
Requires=docker.service
After=docker.service

[Service]
Restart=always
RestartSec=30

ExecStartPre=-/bin/bash -c "if [[ $(docker ps --quiet --all --filter 'name=%p') ]]; then docker rm -f %p; fi && rm -rf ${JENKINS_HOME_DIR}/init.groovy.d/*"
ExecStart=/usr/bin/docker run --rm --name %p \
              -p 8080:8080 \
              -p 50000:50000 \
              --net=host \
              -v ${JENKINS_HOME_DIR}:/var/jenkins_home \
              --env ENV=${ENV} \
              --env EC2_JENKINS_SLAVE_AMI_ID=${EC2_JENKINS_SLAVE_AMI_ID} \
              --env EC2_SECURITY_GROUPS=${EC2_SECURITY_GROUPS} \
              --env EC2_SUBNET_ID=${EC2_SUBNET_ID} \
              --env JAVA_OPTS=${JENKINS_JAVA_OPTS} \
              --env URL_SEED_JOBS_REPO=${URL_SEED_JOBS_REPO} \
              --env SLAVE_USERNAME=${SLAVE_USERNAME} \
              --env LDAP_CONFIG_LOCATION=${LDAP_CONFIG_LOCATION} \
              --env LDAP_PASSWORD \
              --env EC2_INSTANCE_TYPE=${EC2_INSTANCE_TYPE} \
              --env EC2_INSTANCE_CAP=${EC2_INSTANCE_CAP} \
              --env EC2_HIGH_MEMORY_INSTANCE_TYPE=${EC2_HIGH_MEMORY_INSTANCE_TYPE} \
              --env EC2_HIGH_CPU_INSTANCE_TYPE=${EC2_HIGH_CPU_INSTANCE_TYPE} \
              --env DEVOPS_SLAVE_EC2_INSTANCE_PROFILE=${DEVOPS_SLAVE_EC2_INSTANCE_PROFILE} \
              --env GENERAL_SLAVE_EC2_IAM_INSTANCE_PROFILE=${GENERAL_SLAVE_EC2_IAM_INSTANCE_PROFILE} \
              --env HIGH_MEMORY_SLAVE_EC2_IAM_INSTANCE_PROFILE=${GENERAL_SLAVE_EC2_IAM_INSTANCE_PROFILE} \
              --env HIGH_CPU_SLAVE_EC2_IAM_INSTANCE_PROFILE=${GENERAL_SLAVE_EC2_IAM_INSTANCE_PROFILE} \
              --env DEVOPS_SLAVE_CUSTOM_DEVICE_MAPPING=${DEVOPS_SLAVE_CUSTOM_DEVICE_MAPPING} \
              --env GENERAL_SLAVE_CUSTOM_DEVICE_MAPPING=${GENERAL_SLAVE_CUSTOM_DEVICE_MAPPING} \
              --env HIGH_MEMORY_SLAVE_CUSTOM_DEVICE_MAPPING=${HIGH_MEMORY_SLAVE_CUSTOM_DEVICE_MAPPING} \
              --env HIGH_CPU_SLAVE_CUSTOM_DEVICE_MAPPING=${HIGH_CPU_SLAVE_CUSTOM_DEVICE_MAPPING} \
              --env DEVOPS_SLAVE_EC2_NUMBER_EXECUTORS=${DEVOPS_SLAVE_EC2_NUMBER_EXECUTORS} \
              --env GENERAL_SLAVE_EC2_NUMBER_EXECUTORS=${GENERAL_SLAVE_EC2_NUMBER_EXECUTORS} \
              --env HIGH_MEMORY_SLAVE_EC2_NUMBER_EXECUTORS=${HIGH_MEMORY_SLAVE_EC2_NUMBER_EXECUTORS} \
              --env HIGH_CPU_SLAVE_EC2_NUMBER_EXECUTORS=${HIGH_CPU_SLAVE_EC2_NUMBER_EXECUTORS} \
              --memory-reservation=${DOCKER_MEMORY_SOFT_LIMITATION} \
              --env SONAR_NAME=${SONAR_NAME} \
              --env SONAR_SERVER_URL=${SONAR_SERVER_URL} \
              --env SONAR_AUTH_TOKEN \
              --env SONAR_RUNNER_VERSION=${SONAR_RUNNER_VERSION} \
              --env SMTP_SYSADMIN_EMAIL=${SMTP_SYSADMIN_EMAIL} \
              --env SMTP_HOST=${SMTP_HOST} \
              --env SMTP_PORT=${SMTP_PORT} \
              --env GITLAB_AUTH_TOKEN \
              --env GITLAB_URL=${GITLAB_URL} \
              --env ALLURE_CMDLINE_VERSION=${ALLURE_CMDLINE_VERSION} \
              --env JIRASTEPS_PASSWORD \
              --env DATADOG_API_KEY \
              ${JENKINS_IMAGE_NAME}:${JENKINS_IMAGE_VER}
ExecStop=/bin/bash -c "if [[ $(docker ps --quiet --all --filter 'name=%p') ]]; then docker rm -f %p; fi"

[Install]
WantedBy=multi-user.target
